@implements IDisposable
@inject NavigationManager NavigationManager
<div class="top-row p-4 navbar navbar-expand-md navbar-dark bg-dark shadow-sm">
    <div class="container-fluid">
        <a class="navbar-brand text-white fw-bold" href="">CpCinemaBlazor</a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse justify-content-between">
            <ul class="navbar-nav ms-auto flex-row">
                <AuthorizeView>
                    <NotAuthorized>
                        <li class="nav-item">
                            <NavLink class="nav-link text-white" href="/Registration" Match="NavLinkMatch.All">
                                <span class="bi bi-person-plus-fill me-2"></span>Регистрация
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link text-white" href="/" Match="NavLinkMatch.All">
                                <span class="bi bi-box-arrow-in-right me-2"></span>Авторизация
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link text-white" href="/filmpage">
                                <span class="bi bi-film me-2"></span>
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link text-white" href="/people">
                                <span class="bi bi-person-circle me-2"></span>People Page
                            </NavLink>
                        </li>
                    </NotAuthorized>
                    <Authorized>
                        <li class="nav-item">
                            <NavLink class="nav-link text-white" href="/adminpage">
                                <span class="bi bi-gear-fill me-2"></span>Admin Panel
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link text-white" href="/userpage">
                                <span class="bi bi-person-circle me-2"></span>User Page
                            </NavLink>
                        </li>

                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" role="button" data-bs-toggle="dropdown">
                                <span class="bi bi-person-fill me-2"></span>@context.User.Identity?.Name
                            </a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="Account/Manage">Profile</a></li>
                                <li>
                                    <form action="Account/Logout" method="post">
                                        <AntiforgeryToken />
                                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                        <button type="submit" class="dropdown-item">
                                            <span class="bi bi-box-arrow-right me-2"></span>Logout
                                        </button>
                                    </form>
                                </li>
                            </ul>
                        </li>
                    </Authorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}